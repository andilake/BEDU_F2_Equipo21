plot(my_hist, main = "Histograma acumulado", xlab = "Ingreso")
bins
ggplot(var, aes(INGRESO)) +
geom_histogram(bins = 5) +
labs(title = "Histograma",
x = "Ingreso",
y = "Frequency") +
theme_classic()
ggplot(var, aes(INGRESO)) +
geom_histogram(bins = 4) +
labs(title = "Histograma",
x = "Ingreso",
y = "Frequency") +
theme_classic()
ggplot(var, aes(INGRESO)) +
geom_histogram(aes(y = cumsum(..count..)), bins = 4) +
labs(title = "Histograma acumulado",
x = "Ingreso",
y = "Frequency") +
theme_classic()
hist(d$sim, main = "Distribución simétrica")
hist(d$sim, main = "Distribución simétrica")
d <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-03/Data/distribuciones.csv")
hist(d$sim, main = "Distribución simétrica")
Mode(d$sim)[1]; median(d$sim); mean(d$sim)
hist(d$rs, main = "Distribución con sesgo a la derecha")
Mode(d$rs)[1]; median(d$rs); mean(d$rs)
hist(d$ls, main = "Distribución con sesgo a la izquierda")
Mode(d$ls)[1]; median(d$ls); mean(d$ls)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(fill = Categoria, color = Grupo), alpha = 0.2)
source("~/Cursos/BEDU/Data Science/Fase 2/Sesión 3_Postwork.R", echo=TRUE)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(fill = Categoria, color = Grupo), alpha = 0.2)
library(ggplot2)
k = ceiling(sqrt(length(df.clean$Mediciones)))
ac = (max(df.clean$Mediciones)-min(df.clean$Mediciones))/k
bins <- seq(min(df.clean$Mediciones), max(df.clean$Mediciones), by = ac)
hist(df.clean$Mediciones, breaks = bins, main = "Histograma de Medidas")
ggplot(df.clean, aes(x = Mediciones)) + geom_histogram(aes(color = Categoria, fill = Categoria), breaks = bins, alpha = 0.4) + theme_minimal() + labs(title = "Histograma de Medidas por Categoría")
ggplot(df.clean, aes(x = Mediciones)) + geom_histogram(aes(color = Categoria, fill = Categoria), position = "identity", breaks = bins, alpha = 0.4) + theme_minimal() + labs(title = "Histograma de Medidas por Categoría")
?geom_histogram
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(fill = Categoria, color = Grupo), alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(fill = Categoria, color = Grupo), position = "identity", alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(color = Grupo), position = "identity", alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(color = Categoria, color = Grupo), position = "identity", alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(color = Categoria), position = "identity", alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(color = Grupo, fill = Categoria), position = "identity", alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(color = Grupo, fill = Categoria), alpha = 0.2)
ggplot(df.clean, aes(x = Mediciones)) + geom_boxplot(aes(fill = Categoria, color = Grupo), alpha = 0.2)
library(DescTools)
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-03/Data/telecom_service.csv")
Mode(df$total_intl_charge)
library(DescTools)
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-03/Data/telecom_service.csv")
df
str(df)
summary(df)
summary(df$total_intl_charge)
Mode(df$total_intl_charge)
mean(df$total_intl_charge)
median(df$total_intl_charge)
hist(df$total_intl_charge, prob=T, main="Histograma total cargos internacionales")
?hist
hist(df$total_intl_charge, main="Histograma total cargos internacionales")
hist(df$total_intl_charge, main="Histograma de cargos internacionales")
media <- mean(df$total_intl_charge)
ds <- sd(df$total_intl_charge)
media <- mean(df$total_intl_charge)
ds <- sd(df$total_intl_charge)
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
hist(df$total_intl_charge, main="Histograma de cargos internacionales")
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
pnorm(q = 180, mean = mean, sd = sd)
par(mfrow = c(2, 2))
pnorm(q < 1.85, mean = mean, sd = sd)
pnorm(q = 1.85, mean = mean, sd = sd)
pnorm(q = 1.85, mean = media, sd = ds)
polygon(c(min(x), x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
pnorm(q = 1.85, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
media <- mean(df$total_intl_charge)
ds <- sd(df$total_intl_charge)
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
dev.off()
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
pnorm(q = 1.85, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
pnorm(q = 180, mean = mean, sd = sd)
mean <- 175
sd <- 6
x <- seq(-4, 4, 0.01)*sd + mean
y <- dnorm(x, mean = mean, sd = sd)
plot(x, y, type = "l", xlab = "X", ylab = "f(x)",
main = "Densidad de Probabilidad Normal",
sub = expression(paste(mu == 175, " y ", sigma == 6)))
integrate(dnorm, lower = x[1], upper = x[length(x)], mean=mean, sd = sd)
"Calcula P(X <= 180):"
pnorm(q = 180, mean = mean, sd = sd)
par(mfrow = c(2, 2))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=180], 180), c(0, y[x<=180], 0), col="red")
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == mean, " y ", sigma == ds)))
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
media <- mean(df$total_intl_charge)
ds <- sd(df$total_intl_charge)
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
pnorm(q = 1.85, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == mean, " y ", sigma == ds)))
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
source("~/Cursos/BEDU/Data Science/Fase 2/Sesión 4_Postwork.R", echo=TRUE)
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
y <- dnorm(x, mean = media, sd = ds)
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
y <- dnorm(x, mean = media, sd = ds)
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='black', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
curve(dnorm(x, mean = media, sd = ds), from=0, to=5,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
x <- seq(0, 5, 0.01)*ds + media
y <- dnorm(x, mean = media, sd = ds)
polygon(c(0, x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="yellow")
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
x <- seq(-5, 5, 0.01)*ds + media
y <- dnorm(x, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
x <- seq(-4, 4, 0.01)*ds + media
y <- dnorm(x, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == media, " y ", sigma == ds)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
x <- seq(-4, 4, 0.01)*ds + media
y <- dnorm(x, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == media, " y ", sigma == ds)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu ==, media, " y ", sigma ==, ds)))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu ==, media, " y ", sigma ==, ds)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu ==, media, " y ", sigma ==, ds)))
media <- mean(df$total_intl_charge)
ds <- sd(df$total_intl_charge)
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 0,media, " y ", sigma == ds)))
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 0, media, " y ", sigma == ds)))
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 0, + media, " y ", sigma == ds)))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 0, + media, " y ", sigma == ds)))
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
y <- dnorm(x, mean = media, sd = ds)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754)))
polygon(c(min(x), x[x<=1.80], 1.80), c(0, y[x<=1.80], 0), col="red")
pnorm(q = 1.85, mean = media, sd = ds)
pnorm(q = 3, mean = media, sd = ds, lower.tail = FALSE)
polygon(c(min(x), x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="red")}
polygon(c(min(x), x[x>=3], 3), c(0, y[x>=3], 0), col="red")}
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754)))
polygon(c(min(x), x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="red")}
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(min(x), x[x<=1.85], 1.85), c(0, y[x<=1.85], 0), col="red")
# La probabilidad es de 37.74%
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(min(x), x[x>=3], 3), c(0, y[x>=3], 0), col="red")
# La probabilidad es de 37.74%
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(3, x[x>=3], max(x)), c(0, y[x>=3], 0), col="red")
pnorm(q = 4.85, mean = media, sd = ds) - pnorm(q = 2.35, mean = media, sd = ds)
polygon(c(2.35, x[2.35<=x<=4.85], 4.85, c(0, y[x>=3], 0), col="red")
polygon(c(2.35, x[2.35<=x,x<=4.85], 4.85, c(0, y[x>=3], 0), col="red")
polygon(c(2.35, x[2.35<=x & x<=4.85], 4.85, c(0, y[x>=3], 0), col="red")
polygon(c(2.35, x[x>=2.35 & x<=4.85], 4.85, c(0, y[x>=3], 0), col="red")
plot(x, y, type = "l", xlab = "", ylab = "") +
polygon(c(2.35, x[x>=2.35 & x<=4.85], 4.85, c(0, y[x>=2.35 & x<=4.85], 0), col="red")
plot(x, y, type = "l", xlab = "", ylab = "") +
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(2.35, x[x>=2.35 & x<=4.85], 4.85), c(0, y[x>=2.35 & x<=4.85], 0), col="green")
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(2.35, x[x>=2.35 & x<=4.85], 4.85), c(0, y[x>=2.35 & x<=4.85], 0), col="red")
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(3, x[x>=3], max(x)), c(0, y[x>=3], 0), col="red")
plot(x, y, type = "l", xlab = "", ylab = "") +
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 2.764, " y ", sigma == 0.754))) +
polygon(c(2.35, x[x>=2.35 & x<=4.85], 4.85), c(0, y[x>=2.35 & x<=4.85], 0), col="red")
qnorm(p=0.48, mean = media, sd = ds)
qnorm(p=0.10, mean=media, sd=ds)
qnorm(p=0.90, mean=media, sd=ds)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.1)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7)
t.test(iris[iris$Species == 'virginica', "Petal.Width"],
alternative = 'smaller', mu=5.7)
t.test(iris[iris$Species == 'virginica', "Petal.Width"],
alternative = 'less', mu=2.1)
t.test(iris[iris$Species == 'setosa', "Sepal.Length", conf.level = 0.99],
alternative = 'two.sided', mu=5.7)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Width"],
alternative = 'less', mu=2.1, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Width"]-iris[iris$Species == 'versicolor', "Petal.Width"],
alternative = 'two.sided', mu=1.1, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Length"]-iris[iris$Species == 'versicolor', "Petal.Length"],
alternative = 'two.sided', mu=1.1, conf.level = 0.99)
boxplot(Sepal.Width ~ Species, data = iris)
?aov
boxplot(Sepal.Width ~ Species, data = iris)
iris_mean <- df %>% group_by(Species) %>%
summarize_all(mean)
iris %>% group_by(Species) %>%
summarize_all(mean)
library(dplyr)
iris %>% group_by(Species) %>%
summarize_all(mean)
iris %>% group_by(Species) %>%
summarize(mean)
iris %>% group_by(Species) %>%
summarize(mean(Petal.Width))
iris %>% group_by(Species) %>% summarize(mean(Petal.Width))
anova <- aov(Sepal.Width ~ Species, data = iris)
anova
summary(anova)
?aov
anova <- aov(Sepal.Width ~ Species, data = iris)
summary(anova)
boxplot(Sepal.Width ~ Species, data = iris)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7, conf.level = 0.99)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Width"],
alternative = 'less', mu=2.1, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Length"]-iris[iris$Species == 'versicolor', "Petal.Length"],
alternative = 'two.sided', mu=1.1, conf.level = 0.99)
t.test(iris[iris$Species == 'setosa', "Sepal.Length"],
alternative = 'two.sided', mu=5.7, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Width"],
alternative = 'less', mu=2.1, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Length"] - iris[iris$Species == 'versicolor', "Petal.Length"],
alternative = 'two.sided', mu=1.1, conf.level = 0.99)
t.test(iris[iris$Species == 'virginica', "Petal.Length"] - iris[iris$Species == 'versicolor', "Petal.Length"],
alternative = 'two.sided', mu=1.1, conf.level = 0.99)
adv <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/advertising.csv")
url = "https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-07/Data/cbe_data.csv"
library(dplyr)
library(ggplot2)
adv <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/advertising.csv")
str(adv)
?cor
cor(adv)
adv
pairs(~ Sales + TV + Radio + Newpaper,
data = df, gap = 0.4, cex.labels = 1.5)
str(adv)
df <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/nyc_restaurants.csv", header = TRUE)
str(df)
df$East <- factor(df$East, labels = c("No", "Yes"))
df.select <- select(df, Price, Food, Decor, Service)
round(cor(df.select),4)
pairs(~ Price + Food + Decor + Service + East,
data = df, gap = 0.4, cex.labels = 1.5)
library(dplyr)
library(ggplot2)
adv <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/advertising.csv")
str(adv)
round(cor(adv),4)
pairs(~ Sales + TV + Radio + Newpaper,
data = df, gap = 0.4, cex.labels = 1.5)
pairs(~ TV + Radio + Newpaper + Sales,
data = df, gap = 0.4, cex.labels = 1.5)
pairs(~ Sales + TV + Radio + Newpaper, data = adv, gap = 0.4, cex.labels = 1.5)
str(adv)
adv <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/advertising.csv")
str(adv)
cor(adv)
pairs(~ Sales + TV + Radio + Newpaper, data = adv, gap = 0.4, cex.labels = 1.5)
pairs(~ Sales + TV + Radio + Newspaper, data = adv, gap = 0.4, cex.labels = 1.5)
m1 <- lm(Sales ~ TV + Radio + Newspaper)
attach(adv)
m1 <- lm(Sales ~ TV + Radio + Newspaper)
m1
summary(m1)
m2 <- update(m1, ~.-Newspaper)
summary(m2)
StanRes2 <- rstandard(m2)
StanRes2
par(mfrow = c(2, 2))
plot(TV, StanRes2, ylab = "Residuales Estandarizados")
plot(Radio, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
dev.off()
shapiro.test(StanRes2)
library(dplyr)
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/nyc_restaurants.csv", header = TRUE)
str(df)
df$East <- factor(df$East, labels = c("No", "Yes"))
df.select <- select(df, Price, Food, Decor, Service)
round(cor(df.select),4)
pairs(~ Price + Food + Decor + Service + East,
data = df, gap = 0.4, cex.labels = 1.5)
"Estimación por Mínimos Cuadrados Ordinarios (OLS)
Y = beta0 + beta1*Food + beta2*Decor + beta3*Service + beta4*East + e"
attach(df)
m1 <- lm(Price ~ Food + Decor + Service + East)
summary(m1)
"De los resultados anteriores, podemos concluir que el coeficiente de la variable
Service no es significativo. Probemos nuestro modelo sin incluir dicha variable:
Y = beta0 + beta1*Food + beta2*Decor + beta4*East + e"
m2 <- update(m1, ~.-Service)
summary(m2)
# TÉRMINOS DE INTERACCIÓN
"La variable East es una variable dicotómica que identifica si el restaurante está
en el este de la 5ta Avenida o no. Con este tipo de variables, podemos evaluar
efectos cruzados, es decir, podemos generar un efecto diferenciados en cada una de
las variables continuas dependiendo de si miden a un restaurante que está o no en
el este de la 5ta Avenida.
Con esto en mente, podemos considerar el siguiente modelo con efectos cruzados:
Y = beta0 + beta1*Food + beta2*Decor +  beta3*Service + beta4*East
+ beta5*Food*East + beta6*Decor*East + beta7*Service*East + e (Completo)
El cual estiamos de la siguiente forma"
mfull <- lm(Price ~ Food + Decor + Service + East +
Food:East + Decor:East + Service:East)
summary(mfull)
"De forma individual, los coeficientes de los términos de interacción no son significativos.
Sin embargo, también debemos evaluar la significancia global del modelo, esto es,
podemos comparar un modelo tomando en cuenta todos los efectos cruzados y compararlo
contra otro modelo sin efectis cruzados.
Para ello, planteamos el siguiente juego de hipótesis:
H0: beta3 = beta5 = beta6 = beta7 = 0
(Y = beta0 + beta1*Food + beta2*Decor + beta4*East + e)
H1: H0 no es verdad (AL MENOS UN COEFICIENTE ES DISTINTO DE 0)
(Y = beta0 + beta1*Food + beta2*Decor +  beta3*Service + beta4*East
+ beta5*Food*East + beta6*Decor*East + beta7*Service*East + e)
Para este tipo de inferencia usamos el enfoque de análisis de varianza (ANOVA),
ya que estamos comparando la variabilidad de un modelo no restringido contra la
variabilidad de un modelo restringido."
anova(m2,mfull)
"Con base en el p-value del estadístico de prueba, no podemos rechazar Ho, por lo
existe al menos un coeficiente de los terminos de interacción que es distinto de 0 y,
por lo tanto, contribuyen en la explicación del precio:
Y = beta0 + beta1*Food + beta2*Decor + beta4*East + e (Reducido)"
## EJEMPLO 02: SUPUESTOS DEL MODELO DE REGRESIÓN LINEAL Y PREDICCIÓN
"El modelo de regresión lineal clásico establece ciertos supuestos en el término
de error:
1) Eltérmino de error no tiene correlación significativa con las variables
explicativas. En caso contrario, tendríamos un problema de endogeneidad.
2) El término de error sigue una distribución normal"
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(Food, StanRes2, ylab = "Residuales Estandarizados")
plot(Decor, StanRes2, ylab = "Residuales Estandarizados")
plot(East, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
dev.off()
shapiro.test(StanRes2)
"Ho: La variable distribuye como una normal
Ha: La variable no distribuye como una normal"
"Una vez validados estos supuestos, podemos realizar utilizar nuestro modelo estimado
para realizar predicciones y obtener su intervalo de confianza"
data <- data.frame(
Food = c(18.6, 30.3, 22.1, 24.9),
Decor = c(20, 15, 10, 9),
East = c("Yes", "No", "Yes", "No")
)
predict(m2, newdata = data, interval = "confidence", level = 0.95)
"Para comprender mejor manera el papel de los intervalos en la predicción, vamos a
estimar un modelo de regresión simple para realizar una representación gráfica"
modelo <- lm(Price ~ Food)
Food.values <- data.frame(Food = sort(c(18.6, 22.1, 24.9, 30.3), decreasing = FALSE))
pred <- predict(modelo, newdata = Food.values, interval = "confidence", level = 0.95)
plot(Food, Price, xlab = "Food",
ylab = "Price", pch = 16)
points(Food.values$Food, pred[,1], xlab = "Food",
ylab = "Price", pch = 16, col = "red")
abline(lsfit(Food, Price))
plot(Food.values$Food, pred[,1], xlab = "Food",
ylab = "Price", pch = 16, col = "red")
abline(lsfit(Food.values$Food, pred[,1]))
lines(Food.values$Food, pred[, 2], lty = 2, lwd = 2, col = "blue")
lines(Food.values$Food, pred[, 3], lty = 2, lwd = 2, col = "blue")
library(dplyr)
library(ggplot2)
adv <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-06/data/advertising.csv")
str(adv)
cor(adv)
pairs(~ Sales + TV + Radio + Newspaper, data = adv, gap = 0.4, cex.labels = 1.5)
"Estimación por Mínimos Cuadrados Ordinarios (OLS)
Y = beta0 + beta1*TV + beta2*Radio + beta3*Newspaper + e"
attach(adv)
m1 <- lm(Sales ~ TV + Radio + Newspaper)
summary(m1)
"De los resultados anteriores, podemos concluir que el coeficiente de la variable
Newspaper no es significativo. Probemos nuestro modelo sin incluir dicha variable:
Y = beta0 + beta1*TV + beta2*Radio + e"
m2 <- update(m1, ~.-Newspaper)
summary(m2)
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(TV, StanRes2, ylab = "Residuales Estandarizados")
plot(Radio, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
dev.off()
shapiro.test(StanRes2)
shapiro.test(StanRes2)
adv
summary(m2)
hist(StanRes2)
pairs(~ Sales + TV + Radio + Newspaper, data = adv, gap = 0.4, cex.labels = 1.5)
m2 <- update(m1, ~.- Newspaper - Radio)
summary(m2)
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(TV, StanRes2, ylab = "Residuales Estandarizados")
plot(Radio, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
dev.off()
shapiro.test(StanRes2)
m2 <- update(m1, ~.- Newspaper)
summary(m2)
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(TV, StanRes2, ylab = "Residuales Estandarizados")
plot(Radio, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
dev.off()
shapiro.test(StanRes2)
hist(StanRes2)
m3 <- update(m2, ~.- Radio)
summary(m3)
StanRes3 <- rstandard(m3)
par(mfrow = c(2, 2))
plot(TV, StanRes3, ylab = "Residuales Estandarizados")
qqnorm(StanRes3)
qqline(StanRes3)
dev.off()
shapiro.test(StanRes3)
data <- data.frame(
TV = c(25, 50, 75, 100, 125, 150)
)
predict(m3, newdata = data, interval = "confidence", level = 0.95)
modelo <- lm(Sales ~ TV)
modelo
?pch
data <- data.frame(
TV = c(25, 50, 75, 100, 125, 150)
)
predict(m3, newdata = data, interval = "confidence", level = 0.95)
modelo <- lm(Sales ~ TV)
TV.values <- data.frame(TV = sort(c(25, 50, 75, 100, 125, 150), decreasing = FALSE))
pred <- predict(modelo, newdata = TV.values, interval = "confidence", level = 0.95)
plot(TV, Sales, xlab = "TV",
ylab = "Sales", pch = 16)
points(TV.values$TV, pred[,1], xlab = "TV",
ylab = "Sales", pch = 16, col = "red")
abline(lsfit(TV, Sales))
plot(TV.values$TV, pred[,1], xlab = "TV",
ylab = "Sales", pch = 16, col = "red")
abline(lsfit(TV.values$TV, pred[,1]))
lines(TV.values$TV, pred[, 2], lty = 2, lwd = 2, col = "blue")
lines(TV.values$TV, pred[, 3], lty = 2, lwd = 2, col = "blue")
setwd("~/Cursos/BEDU/Data Science/Fase 2/Postworks")
df<-read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-08/Postwork/inseguridad_alimentaria_bedu.csv")
str(df)
setwd("~/Cursos/BEDU/Data Science/Fase 2/Postworks")
